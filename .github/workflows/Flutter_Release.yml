name: Flutter CI - Release Build

on:
  workflow_dispatch: # 手动触发工作流

permissions:
  contents: write # 确保拥有写入权限

env:
  RELEASE_TAG: v1.0.0
  RELEASE_NAME: "Release v1.0.0"
  RELEASE_BODY: |
    ## 更新内容
    - 新功能上线
    - 性能优化和修复已知问题

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.19.5"

      - name: Clean build
        run: flutter clean

      - name: Install dependencies
        run: flutter pub get

      - name: Build Android APK (Split per ABI)
        run: flutter build apk --release --split-per-abi

      - name: Backup important APKs
        run: |
          mkdir -p output/android
          cp build/app/outputs/flutter-apk/*.apk output/android/

      - name: Clean up intermediate files
        run: rm -rf build/app/intermediates/ build/app/outputs/flutter-apk/debug/

      - name: Upload Android APKs
        uses: actions/upload-artifact@v3
        with:
          name: android-apk
          path: output/android/

  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.19.5"

      - name: Clean build
        run: flutter clean

      - name: Install dependencies
        run: flutter pub get

      - name: Build Windows Executable (Release)
        run: flutter build windows --release

      - name: Copy Windows Release files
        run: |
          mkdir -p output/windows
          cp build/windows/x64/runner/Release/*.exe output/windows/
          cp build/windows/x64/runner/Release/*.dll output/windows/
          if (Test-Path build/windows/x64/runner/Release/icudtl.dat) {
            Copy-Item build/windows/x64/runner/Release/icudtl.dat output/windows/
          } else {
            Write-Host "icudtl.dat not found, skipping."
          }

      - name: Upload Windows Executables
        uses: actions/upload-artifact@v3
        with:
          name: windows-release
          path: output/windows/

  create-release:
    needs: [build-android, build-windows]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Android artifacts
        uses: actions/download-artifact@v3
        with:
          name: android-apk

      - name: Download Windows artifacts
        uses: actions/download-artifact@v3
        with:
          name: windows-release

      - name: Create a new Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          # release_name: ${{ env.RELEASE_NAME }}
          body: ${{ env.RELEASE_BODY }}
          draft: false
          prerelease: true

      - name: Upload Android APKs to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: output/android/*.apk
          asset_name: android-apks.zip
          asset_content_type: application/zip

      - name: Upload Windows Executables to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: output/windows/*
          asset_name: windows-executables.zip
          asset_content_type: application/zip
